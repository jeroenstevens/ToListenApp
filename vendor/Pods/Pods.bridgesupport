<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAllowsOverdrawKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationCurveKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationDurationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationTypeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerDisablesFrontViewInteractionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerQuickSwipeToggleVelocityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerRecognizesPanningOnFrontViewKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerRecognizesResetTapOnFrontViewKey' type='@'/>
<enum name='MGBorderEtchedAll' value='30'/>
<enum name='MGBorderEtchedBottom' value='4'/>
<enum name='MGBorderEtchedLeft' value='8'/>
<enum name='MGBorderEtchedRight' value='16'/>
<enum name='MGBorderEtchedTop' value='2'/>
<enum name='MGBorderNone' value='0'/>
<enum name='MGBoxLayoutAttached' value='2'/>
<enum name='MGBoxLayoutAutomatic' value='0'/>
<enum name='MGBoxLayoutFixedPosition' value='1'/>
<enum name='MGBoxLayoutNone' value='3'/>
<enum name='MGLayoutGridStyle' value='1'/>
<enum name='MGLayoutTableStyle' value='0'/>
<enum name='MGLeft' value='0'/>
<enum name='MGMiddle' value='1'/>
<enum name='MGResizingExpandWidthToFill' value='1'/>
<enum name='MGResizingNone' value='0'/>
<enum name='MGResizingShrinkWrap' value='2'/>
<enum name='MGRight' value='2'/>
<enum name='MGSidePrecedenceLeft' value='0'/>
<enum name='MGSidePrecedenceMiddle' value='2'/>
<enum name='MGSidePrecedenceRight' value='1'/>
<enum name='MGUnderlineBottom' value='2'/>
<enum name='MGUnderlineNone' value='0'/>
<enum name='MGUnderlineTop' value='1'/>
<enum name='SUPPORTS_UNDOCUMENTED_API' value='0'/>
<function name='PKLog' variadic='true'>
<arg declared_type='NSString*' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<class name='CAAnimation'>
<method selector='pk_identifier'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setPk_identifier:'>
<arg declared_type='NSInteger' index='0' name='pk_identifier' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CALayer'>
<method selector='animateToAlpha:timingFunction:duration:alterModel:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animateToPoint:timingFunction:duration:alterModel:'>
<arg declared_type='CGPoint' index='0' name='toPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animateToTransform:timingFunction:duration:alterModel:'>
<arg declared_type='CATransform3D' index='0' name='toTransform' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animationFromAlpha:toAlpha:timingFunction:duration:'>
<arg declared_type='CGFloat' index='0' name='fromValue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='toValue' type='f' type64='d'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
<method class_method='true' selector='animationFromPosition:toPosition:timingFunction:duration:'>
<arg declared_type='CGPoint' index='0' name='fromPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='toPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
<method class_method='true' selector='animationFromTransformation:toTransformation:timingFunction:duration:'>
<arg declared_type='CATransform3D' index='0' name='fromTransformation' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CATransform3D' index='1' name='toTransformation' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
</class>
<class name='MGBlockWrapper'>
<method selector='block'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='doit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlock:'>
<arg declared_type='Block' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='wrapperForBlock:'>
<arg declared_type='Block' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='MGBlockWrapper*' type='@'/>
</method>
</class>
<class name='MGBox'>
<method selector='borderStyle'>
<retval declared_type='MGBorderStyle' type='i'/>
</method>
<method selector='bottomBorder'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='bottomBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='box'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='boxWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layoutWithSpeed:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='speed' type='d'/>
<arg declared_type='Block' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='leftBorder'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='leftBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='rasterize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rightBorder'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='rightBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='screenshot:'>
<arg declared_type='float' index='0' name='scale' type='f'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBorderColors:'>
<arg declared_type='id' index='0' name='colors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderStyle:'>
<arg declared_type='MGBorderStyle' index='0' name='borderStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomBorder:'>
<arg declared_type='UIView*' index='0' name='bottomBorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomBorderColor:'>
<arg declared_type='UIColor*' index='0' name='bottomBorderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBorder:'>
<arg declared_type='UIView*' index='0' name='leftBorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBorderColor:'>
<arg declared_type='UIColor*' index='0' name='leftBorderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRasterize:'>
<arg declared_type='BOOL' index='0' name='rasterize' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBorder:'>
<arg declared_type='UIView*' index='0' name='rightBorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBorderColor:'>
<arg declared_type='UIColor*' index='0' name='rightBorderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopBorder:'>
<arg declared_type='UIView*' index='0' name='topBorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopBorderColor:'>
<arg declared_type='UIColor*' index='0' name='topBorderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='topBorder'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='topBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='MGButton'>
<method selector='setup'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MGLayoutManager'>
<method class_method='true' selector='findBoxesInView:notInSet:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='id' index='1' name='boxes' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findViewsInView:notInSet:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='id' index='1' name='boxes' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='layoutBoxesIn:'>
<arg declared_type='UIView*' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='layoutBoxesIn:withSpeed:completion:'>
<arg declared_type='UIView*' index='0' name='container' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='speed' type='d'/>
<arg declared_type='Block' function_pointer='true' index='2' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='positionAttachedBoxesIn:'>
<arg declared_type='UIView*' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stackByZIndexIn:'>
<arg declared_type='UIView*' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MGLine'>
<method selector='allItems'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='font'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='itemPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='leftItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='leftItemsTextAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='leftTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='line'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='lineWithLeft:multilineRight:width:minHeight:'>
<arg declared_type='id' index='0' name='left' type='@'/>
<arg declared_type='NSString*' index='1' name='right' type='@'/>
<arg declared_type='CGFloat' index='2' name='width' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='height' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='lineWithLeft:right:'>
<arg declared_type='NSObject*' index='0' name='left' type='@'/>
<arg declared_type='NSObject*' index='1' name='right' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='lineWithLeft:right:size:'>
<arg declared_type='NSObject*' index='0' name='left' type='@'/>
<arg declared_type='NSObject*' index='1' name='right' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='lineWithMultilineLeft:right:width:minHeight:'>
<arg declared_type='NSString*' index='0' name='left' type='@'/>
<arg declared_type='id' index='1' name='right' type='@'/>
<arg declared_type='CGFloat' index='2' name='width' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='height' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='lineWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeLabel:placement:'>
<arg declared_type='id' index='0' name='text' type='@'/>
<arg declared_type='MGItemPlacement' index='1' name='placement' type='i'/>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='maxHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='middleFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='middleItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='middleItemsTextAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='middleTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='middleTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='middleTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='multilineLeft'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='multilineMiddle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='multilineRight'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='multilineWithText:font:width:padding:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='CGFloat' index='2' name='width' type='f' type64='d'/>
<arg declared_type='UIEdgeInsets' index='3' name='padding' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rightFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='rightItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='rightItemsTextAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='rightTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='rightTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='rightTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPadding:'>
<arg declared_type='CGFloat' index='0' name='itemPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftItems:'>
<arg declared_type='NSMutableArray*' index='0' name='leftItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftItemsTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='leftItemsTextAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='leftTextShadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxHeight:'>
<arg declared_type='CGFloat' index='0' name='maxHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleFont:'>
<arg declared_type='UIFont*' index='0' name='middleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleItems:'>
<arg declared_type='NSMutableArray*' index='0' name='middleItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleItemsTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='middleItemsTextAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleTextColor:'>
<arg declared_type='UIColor*' index='0' name='middleTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='middleTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='middleTextShadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinHeight:'>
<arg declared_type='CGFloat' index='0' name='minHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultilineLeft:'>
<arg declared_type='NSString*' index='0' name='multilineLeft' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultilineMiddle:'>
<arg declared_type='NSString*' index='0' name='multilineMiddle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultilineRight:'>
<arg declared_type='NSString*' index='0' name='multilineRight' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightFont:'>
<arg declared_type='UIFont*' index='0' name='rightFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightItems:'>
<arg declared_type='NSMutableArray*' index='0' name='rightItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightItemsTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='rightItemsTextAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightTextColor:'>
<arg declared_type='UIColor*' index='0' name='rightTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='rightTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='rightTextShadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSidePrecedence:'>
<arg declared_type='MGSidePrecedence' index='0' name='sidePrecedence' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSolidUnderline:'>
<arg declared_type='CALayer*' index='0' name='solidUnderline' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='textShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderlineType:'>
<arg declared_type='MGUnderlineType' index='0' name='underlineType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidenAsNeeded:'>
<arg declared_type='BOOL' index='0' name='widenAsNeeded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidePrecedence'>
<retval declared_type='MGSidePrecedence' type='i'/>
</method>
<method selector='solidUnderline'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='underlineType'>
<retval declared_type='MGUnderlineType' type='i'/>
</method>
<method selector='widenAsNeeded'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MGMushParser'>
<method selector='attributedString'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method class_method='true' selector='attributedStringFromMush:font:color:'>
<arg declared_type='NSString*' index='0' name='markdown' type='@'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='UIColor*' index='2' name='color' type='@'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='baseColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='baseFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='mush'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='parse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseColor:'>
<arg declared_type='UIColor*' index='0' name='baseColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseFont:'>
<arg declared_type='UIFont*' index='0' name='baseFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMush:'>
<arg declared_type='NSString*' index='0' name='mush' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strip'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MGScrollView'>
<method selector='keepAboveKeyboard'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='keepFirstResponderAboveKeyboard'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutWithSpeed:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='speed' type='d'/>
<arg declared_type='Block' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreAfterKeyboardClose:'>
<arg declared_type='Block' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToView:withMargin:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='CGFloat' index='1' name='margin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='scroller'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='scrollerWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setKeepAboveKeyboard:'>
<arg declared_type='UIView*' index='0' name='keepAboveKeyboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeepFirstResponderAboveKeyboard:'>
<arg declared_type='BOOL' index='0' name='keepFirstResponderAboveKeyboard' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardMargin:'>
<arg declared_type='CGFloat' index='0' name='keyboardMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='snapToNearestBox'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MGTableBox'>
<method selector='allLines'>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
<method selector='bottomLines'>
<retval declared_type='NSMutableOrderedSet*' type='@'/>
</method>
<method selector='middleLines'>
<retval declared_type='NSMutableOrderedSet*' type='@'/>
</method>
<method selector='setBottomLines:'>
<arg declared_type='NSMutableOrderedSet*' index='0' name='bottomLines' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddleLines:'>
<arg declared_type='NSMutableOrderedSet*' index='0' name='middleLines' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopLines:'>
<arg declared_type='NSMutableOrderedSet*' index='0' name='topLines' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topLines'>
<retval declared_type='NSMutableOrderedSet*' type='@'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attributedStringByTrimming:'>
<arg declared_type='NSCharacterSet*' index='0' name='set' type='@'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='MGEventHandlers'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='MGObservers'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='asyncLayout'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='asyncLayoutOnce'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='asyncQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='attachedTo'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='bottomMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='bottomPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='boxLayoutMode'>
<retval declared_type='MGBoxLayoutMode' type='i'/>
</method>
<method selector='boxes'>
<retval declared_type='NSMutableOrderedSet*' type='@'/>
</method>
<method selector='completionHandler'>
<retval declared_type='PKAnimationCompletionBlock' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='contentLayoutMode'>
<retval declared_type='MGContentLayoutMode' type='i'/>
</method>
<method selector='fixedPosition'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='layingOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='leftMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='leftPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='longPressable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longPressed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='longPresser'>
<retval declared_type='UILongPressGestureRecognizer*' type='@'/>
</method>
<method selector='margin'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='maxWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='on:do:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='on:doOnce:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='onChangeOf:do:'>
<arg declared_type='NSString*' index='0' name='keypath' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='onLongPress'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onSwipe'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onTap'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='padding'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='parentBox'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='pk_performBlock:onMainThread:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='1' name='mainThread' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replacementFor'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='revealController:didChangeToState:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revealController:willChangeToState:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rightPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAnimating:'>
<arg declared_type='BOOL' index='0' name='animating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAsyncLayout:'>
<arg declared_type='Block' function_pointer='true' index='0' name='asyncLayout' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAsyncLayoutOnce:'>
<arg declared_type='Block' function_pointer='true' index='0' name='asyncLayoutOnce' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAsyncQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='asyncQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachedTo:'>
<arg declared_type='UIView*' index='0' name='attachedTo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomMargin:'>
<arg declared_type='CGFloat' index='0' name='bottomMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomPadding:'>
<arg declared_type='CGFloat' index='0' name='bottomPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoxLayoutMode:'>
<arg declared_type='MGBoxLayoutMode' index='0' name='boxLayoutMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoxes:'>
<arg declared_type='NSMutableOrderedSet*' index='0' name='boxes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionHandler:'>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLayoutMode:'>
<arg declared_type='MGContentLayoutMode' index='0' name='contentLayoutMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFixedPosition:'>
<arg declared_type='CGPoint' index='0' name='fixedPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayingOut:'>
<arg declared_type='BOOL' index='0' name='layingOut' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftMargin:'>
<arg declared_type='CGFloat' index='0' name='leftMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftPadding:'>
<arg declared_type='CGFloat' index='0' name='leftPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongPressable:'>
<arg declared_type='BOOL' index='0' name='longPressable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongPresser:'>
<arg declared_type='UILongPressGestureRecognizer*' index='0' name='longPresser' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMGEventHandlers:'>
<arg declared_type='NSMutableDictionary*' index='0' name='MGEventHandlers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMGObservers:'>
<arg declared_type='NSMutableDictionary*' index='0' name='MGObservers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='UIEdgeInsets' index='0' name='margin' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxWidth:'>
<arg declared_type='CGFloat' index='0' name='maxWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnLongPress:'>
<arg declared_type='Block' function_pointer='true' index='0' name='onLongPress' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnSwipe:'>
<arg declared_type='Block' function_pointer='true' index='0' name='onSwipe' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnTap:'>
<arg declared_type='Block' function_pointer='true' index='0' name='onTap' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPadding:'>
<arg declared_type='UIEdgeInsets' index='0' name='padding' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentBox:'>
<arg declared_type='UIView*' index='0' name='parentBox' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplacementFor:'>
<arg declared_type='UIView*' index='0' name='replacementFor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightMargin:'>
<arg declared_type='CGFloat' index='0' name='rightMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightPadding:'>
<arg declared_type='CGFloat' index='0' name='rightPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSizingMode:'>
<arg declared_type='MGBoxResizingMode' index='0' name='sizingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlideBoxesInFromEmpty:'>
<arg declared_type='BOOL' index='0' name='slideBoxesInFromEmpty' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartHandler:'>
<arg declared_type='PKAnimationStartBlock' function_pointer='true' index='0' name='startHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwipable:'>
<arg declared_type='BOOL' index='0' name='swipable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwiper:'>
<arg declared_type='UISwipeGestureRecognizer*' index='0' name='swiper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTappable:'>
<arg declared_type='BOOL' index='0' name='tappable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTapper:'>
<arg declared_type='UITapGestureRecognizer*' index='0' name='tapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopMargin:'>
<arg declared_type='CGFloat' index='0' name='topMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopPadding:'>
<arg declared_type='CGFloat' index='0' name='topPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type='int' index='0' name='zIndex' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizingMode'>
<retval declared_type='MGBoxResizingMode' type='i'/>
</method>
<method selector='slideBoxesInFromEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startAnimationOnLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startHandler'>
<retval declared_type='PKAnimationStartBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='swipable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='swiped'>
<retval declared_type='void' type='v'/>
</method>
<method selector='swiper'>
<retval declared_type='UISwipeGestureRecognizer*' type='@'/>
</method>
<method selector='tappable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tapped'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapper'>
<retval declared_type='UITapGestureRecognizer*' type='@'/>
</method>
<method selector='topMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='topPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='trigger:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zIndex'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='PKAnimation'>
<method selector='identifier'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSInteger' index='0' name='identifier' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PKLayerAnimator'>
<method selector='addAnimation:forKey:'>
<arg declared_type='PKAnimation*' index='0' name='animation' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSequentialAnimation:forKey:'>
<arg declared_type='PKSequentialAnimation*' index='0' name='animation' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animatorForLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='setLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAndRemoveAllAnimations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimationForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PKRevealController'>
<method selector='allowsOverdraw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animationCurve'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='animationDuration'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='animationType'>
<retval declared_type='int' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='disablesFrontViewInteraction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enterPresentationModeAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusedController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='frontViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='hasLeftViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasRightViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFrontViewController:leftViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrontViewController:leftViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrontViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isPresentationModeActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leftViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='quickSwipeVelocity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='recognizesPanningOnFrontView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recognizesResetTapOnFrontView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recognizesResetTapOnFrontViewInPresentationMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resignPresentationModeEntirely:animated:completion:'>
<arg declared_type='BOOL' index='0' name='entirely' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:rightViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:rightViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='revealPanGestureRecognizer'>
<retval declared_type='UIPanGestureRecognizer*' type='@'/>
</method>
<method selector='revealResetTapGestureRecognizer'>
<retval declared_type='UITapGestureRecognizer*' type='@'/>
</method>
<method selector='rightViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='setAllowsOverdraw:'>
<arg declared_type='BOOL' index='0' name='allowsOverdraw' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationCurve:'>
<arg declared_type='UIViewAnimationCurve' index='0' name='animationCurve' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='CGFloat' index='0' name='animationDuration' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='int' index='0' name='animationType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisablesFrontViewInteraction:'>
<arg declared_type='BOOL' index='0' name='disablesFrontViewInteraction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontViewController:focusAfterChange:completion:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='BOOL' index='1' name='focus' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftViewController:'>
<arg declared_type='UIViewController*' index='0' name='leftViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumWidth:maximumWidth:forViewController:'>
<arg declared_type='CGFloat' index='0' name='minWidth' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='maxWidth' type='f' type64='d'/>
<arg declared_type='UIViewController*' index='2' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuickSwipeVelocity:'>
<arg declared_type='CGFloat' index='0' name='quickSwipeVelocity' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesPanningOnFrontView:'>
<arg declared_type='BOOL' index='0' name='recognizesPanningOnFrontView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesResetTapOnFrontView:'>
<arg declared_type='BOOL' index='0' name='recognizesResetTapOnFrontView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesResetTapOnFrontViewInPresentationMode:'>
<arg declared_type='BOOL' index='0' name='recognizesResetTapOnFrontViewInPresentationMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightViewController:'>
<arg declared_type='UIViewController*' index='0' name='rightViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:animated:completion:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='PKRevealController' type='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@iii@@{CGSize=ff}{CGSize=ff}@@?i@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}' type64='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@qqq@@{CGSize=dd}{CGSize=dd}@@?q@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}'/>
</method>
<method selector='type'>
<retval declared_type='PKRevealController' type='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@iii@@{CGSize=ff}{CGSize=ff}@@?i@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}' type64='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@qqq@@{CGSize=dd}{CGSize=dd}@@?q@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}'/>
</method>
</class>
<class name='PKRevealControllerView'>
<method selector='hasShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setShadow:'>
<arg declared_type='BOOL' index='0' name='shadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionForContainedViewEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateShadowWithAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
</class>
<class name='PKSequentialAnimation'>
<method class_method='true' selector='animationForKeyPath:values:duration:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSArray*' index='1' name='values' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='animationForKeyPath:values:duration:progress:completion:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSArray*' index='1' name='values' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' index='3' name='progress' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='progressHandler'>
<retval declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='setProgressHandler:'>
<arg declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' index='0' name='progressHandler' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIColor'>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='arrayFromRGBAComponents'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='blue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='brightness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='canProvideRGBComponents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='colorByAdding:'>
<arg declared_type='CGFloat' index='0' name='f' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByAdding:alpha:'>
<arg declared_type='CGFloat' index='0' name='f' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByAddingColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByAddingHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByAddingRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByDarkeningTo:'>
<arg declared_type='CGFloat' index='0' name='f' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByDarkeningToColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByDarkeningToRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByLighteningTo:'>
<arg declared_type='CGFloat' index='0' name='f' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByLighteningToColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByLighteningToRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByLuminanceMapping'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByMultiplyingBy:'>
<arg declared_type='CGFloat' index='0' name='f' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByMultiplyingByColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorByMultiplyingByRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorSpaceModel'>
<retval declared_type='CGColorSpaceModel' type='i'/>
</method>
<method selector='colorSpaceString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:'>
<arg declared_type='NSString*' index='0' name='stringToConvert' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithName:'>
<arg declared_type='NSString*' index='0' name='cssColorName' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBHex:'>
<arg declared_type='UInt32' index='0' name='hex' type='L' type64='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithString:'>
<arg declared_type='NSString*' index='0' name='stringToConvert' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='green'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='hexStringFromColor'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='hue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat*' index='0' name='h' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='1' name='s' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='2' name='b' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='3' name='a' type='^f' type64='^d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='randomColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='red'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='red:green:blue:alpha:'>
<arg declared_type='CGFloat*' index='0' name='r' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='1' name='g' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='2' name='b' type='^f' type64='^d'/>
<arg declared_type='CGFloat*' index='3' name='a' type='^f' type64='^d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rgbHex'>
<retval declared_type='UInt32' type='L' type64='I'/>
</method>
<method selector='saturation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='semiRandomColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='stringFromColor'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='white'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIControl'>
<method selector='MGEventHandlers'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='onControlEvent:do:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvent' type='I' type64='Q'/>
<arg declared_type='Block' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeHandlersForControlEvent:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvent' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMGEventHandlers:'>
<arg declared_type='NSMutableDictionary*' index='0' name='MGEventHandlers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIResponder'>
<method selector='currentFirstResponder'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIView'>
<method selector='bottomLeft'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='bottomRight'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='origin'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrigin:'>
<arg declared_type='CGPoint' index='0' name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setX:'>
<arg declared_type='CGFloat' index='0' name='x' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setY:'>
<arg declared_type='CGFloat' index='0' name='y' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='topLeft'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='topRight'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIViewController'>
<method selector='revealController'>
<retval declared_type='PKRevealController*' type='@'/>
</method>
<method selector='setRevealController:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='MGEvents'>
<method selector='MGEventHandlers' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='MGObservers' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='on:do:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='on:doOnce:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='onChangeOf:do:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NSString*' index='0' name='keypath' type='@'/>
<arg declared_type='Block' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMGEventHandlers:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMutableDictionary*' index='0' name='MGEventHandlers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMGObservers:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMutableDictionary*' index='0' name='MGObservers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trigger:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MGLayoutBox'>
<method selector='asyncLayout' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='asyncLayoutOnce' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='asyncQueue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='attachedTo' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='bottomMargin' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='bottomPadding' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='boxLayoutMode' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='MGBoxLayoutMode' type='i'/>
</method>
<method selector='boxes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMutableOrderedSet*' type='@'/>
</method>
<method selector='contentLayoutMode' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='MGContentLayoutMode' type='i'/>
</method>
<method selector='fixedPosition' type='{CGPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='layingOut' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layout' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='leftMargin' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='leftPadding' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='longPressable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longPressed' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='longPresser' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UILongPressGestureRecognizer*' type='@'/>
</method>
<method selector='margin' type='{UIEdgeInsets=ffff}8@0:4' type64='{UIEdgeInsets=dddd}16@0:8'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='maxWidth' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='onLongPress' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onSwipe' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onTap' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='Block' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='padding' type='{UIEdgeInsets=ffff}8@0:4' type64='{UIEdgeInsets=dddd}16@0:8'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='parentBox' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='replacementFor' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='rightMargin' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rightPadding' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAsyncLayout:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='Block' function_pointer='true' index='0' name='asyncLayout' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAsyncLayoutOnce:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='Block' function_pointer='true' index='0' name='asyncLayoutOnce' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAsyncQueue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='dispatch_queue_t' index='0' name='asyncQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachedTo:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView*' index='0' name='attachedTo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomMargin:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='bottomMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomPadding:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='bottomPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoxLayoutMode:' type='v12@0:4i8' type64='v20@0:8i16'>
<arg declared_type='MGBoxLayoutMode' index='0' name='boxLayoutMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoxes:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMutableOrderedSet*' index='0' name='boxes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLayoutMode:' type='v12@0:4i8' type64='v20@0:8i16'>
<arg declared_type='MGContentLayoutMode' index='0' name='contentLayoutMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFixedPosition:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='fixedPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayingOut:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='layingOut' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftMargin:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='leftMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftPadding:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='leftPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongPressable:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='longPressable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongPresser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UILongPressGestureRecognizer*' index='0' name='longPresser' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:' type='v24@0:4{UIEdgeInsets=ffff}8' type64='v48@0:8{UIEdgeInsets=dddd}16'>
<arg declared_type='UIEdgeInsets' index='0' name='margin' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxWidth:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='maxWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnLongPress:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='Block' function_pointer='true' index='0' name='onLongPress' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnSwipe:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='Block' function_pointer='true' index='0' name='onSwipe' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnTap:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='Block' function_pointer='true' index='0' name='onTap' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPadding:' type='v24@0:4{UIEdgeInsets=ffff}8' type64='v48@0:8{UIEdgeInsets=dddd}16'>
<arg declared_type='UIEdgeInsets' index='0' name='padding' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentBox:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView*' index='0' name='parentBox' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplacementFor:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView*' index='0' name='replacementFor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightMargin:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='rightMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightPadding:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='rightPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSizingMode:' type='v12@0:4i8' type64='v20@0:8i16'>
<arg declared_type='MGBoxResizingMode' index='0' name='sizingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlideBoxesInFromEmpty:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='slideBoxesInFromEmpty' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwipable:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='swipable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwiper:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISwipeGestureRecognizer*' index='0' name='swiper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTappable:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='tappable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTapper:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITapGestureRecognizer*' index='0' name='tapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopMargin:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='topMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopPadding:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='topPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:' type='v12@0:4i8' type64='v20@0:8i16'>
<arg declared_type='int' index='0' name='zIndex' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizingMode' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='MGBoxResizingMode' type='i'/>
</method>
<method selector='slideBoxesInFromEmpty' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='swipable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='swiped' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='swiper' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UISwipeGestureRecognizer*' type='@'/>
</method>
<method selector='tappable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tapped' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapper' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITapGestureRecognizer*' type='@'/>
</method>
<method selector='topMargin' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='topPadding' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='zIndex' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='int' type='i'/>
</method>
</informal_protocol>
<informal_protocol name='PKAnimating'>
<method selector='completionHandler' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='PKAnimationCompletionBlock' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='isAnimating' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='setAnimating:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='animating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='PKAnimationStartBlock' function_pointer='true' index='0' name='startHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationOnLayer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startHandler' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='PKAnimationStartBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='stopAnimation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PKBlocks'>
<method selector='pk_performBlock:onMainThread:' type='v16@0:4@?8B12' type64='v28@0:8@?16B24'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='1' name='mainThread' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PKRevealing'>
<method selector='revealController:didChangeToState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revealController:willChangeToState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
